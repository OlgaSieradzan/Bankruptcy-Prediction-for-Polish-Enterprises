scale_color_manual(breaks = c("Upadłe", "Nieupadłe"), values = c("#CD1076", "orange"))+
theme_light()
p4 <- ggplot()+
geom_density(data = altmanmodel_nauka_up, aes(x = X4, color = "Nieupadłe"), size = 1)+
geom_density(data = altmanmodel_nauka_zy, aes(x = X4, color ="Upadłe"), size = 1) +
labs(title = "Wartość rynkowa kapitału akcyjnego / Wartość księgowa zadłużenia", y = NULL, x = NULL)+
scale_color_manual(breaks = c("Upadłe", "Nieupadłe"), values = c("#CD1076", "orange"))+
theme_light()
p5 <- ggplot()+
geom_density(data = altmanmodel_nauka_up, aes(x = X5, color = "Nieupadłe"), size = 1)+
geom_density(data = altmanmodel_nauka_zy, aes(x = X5, color ="Upadłe"), size = 1) +
labs(title = "Przychody ze sprzedaży / Aktywa ogółem", y = NULL, x = NULL)+
scale_color_manual(breaks = c("Upadłe", "Nieupadłe"), values = c("#CD1076", "orange"))+
theme_light()
plot_grid(p1,p2,p3, nrow = 3)
plot_grid(p4,p5, nrow = 2)
altmanmodel <- rbind(nauka, testowe)
altmanmodel <- altmanmodel[,c(3,6,7,8,9,65)]
altmanmodel <- as.data.frame(lapply(altmanmodel, as.numeric))
colnames(altmanmodel) <- c("X1", "X2", "X3", "X4", "X5", "X6")
altmanmodel <- as.data.frame(lapply(altmanmodel, function(x) {
x[is.na(x)] <- median(x, na.rm = TRUE)
return(x)
}))
altmanmodel<- altmanmodel%>%
mutate(Z_score = 1.2*X1 + 1.4*X2 + 3.3*X3 + 0.6*X4+0.99*X5)
altmanmodel%>%
ggplot()+
geom_boxplot(aes(y = 1, x = Z_score), size = 0.5, color = "#CD1076")+
xlim(-25,18)+
geom_vline(xintercept = 1.8, color = "grey1", size = 1)+
geom_vline(xintercept = 3.0, color = "grey1", size = 1)+
annotate(
"rect", xmin = 1.8, xmax = 3, ymin = 0.6, ymax = 1.4,
fill = "grey1", alpha = 0.2) +
theme_light(base_size = 18)+
labs ( y = "", x = "Z_Score")
altmanmodel <- altmanmodel%>%
mutate(Wynik = ifelse(Z_score <1.8, "U", ifelse(Z_score<3.0, "SS", "NU")))
counts1 <- data.frame(Stan = names(table(altmanmodel$Wynik)), Count = as.vector(table(altmanmodel$Wynik)))
ggplot(counts1, aes(x = Stan, y = Count, fill = Stan)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = c("orange", "grey", "#CD1076")) +
labs(x = "", y = "Wielkość grupy", title = "") +
theme_minimal(base_size = 18) +
theme(legend.position = "none")
#zywe = 0 , upadle = 1
altmanmodel <- altmanmodel%>%
mutate(Dokladnosc = ifelse(Wynik=="U" & X6 == 1,"UU", ifelse(Wynik=="NU" & X6 == 0, "NUNU", ifelse(Wynik=="NU" & X6 == 1, "UNU", ifelse(Wynik=="U" & X6 == 0, "NUU", ifelse(Wynik=="SS" & X6 == 0, "NUSS", "USS"))))))
counts2 <- data.frame(Rzeczywistość = c("Nieupadła", "Nieupadła", "Nieupadła", "Upadła", "Upadła", "Upadła"),Prognoza= c("Nieupadła", "Szara strefa", "Upadła", "Nieupadła", "Szara strefa", "Upadła"), Ilość = as.vector(table(altmanmodel$Dokladnosc)))
counts2
knitr::include_graphics("C:/Users/olgas/OneDrive/Documents/GitHub/Quantative-risk-models-summit/WhatsApp Image 2025-03-06 at 09.54.51_3e79e9e8.jpg")
library(MASS)
library(caret)
nauka <- as.data.frame(lapply(nauka, as.numeric))
testowe <- as.data.frame(lapply(testowe, as.numeric))
nauka <- as.data.frame(lapply(nauka, function(x) {
x[is.na(x)] <- median(x, na.rm = TRUE)
return(x)
}))
testowe <- as.data.frame(lapply(testowe, function(x) {
x[is.na(x)] <- median(x, na.rm = TRUE)
return(x)
}))
model_lda <- lda(X0 ~ ., data = nauka[, c(3,6,7,8,9,65)])
predictions <- predict(model_lda, newdata = testowe[,c(3,6,7,8,9)])
# upadłe  - 1 # żywe - 0
confusion_matrix <- table(testowe$X0, predictions$class)
matrixc <- data.frame(c(32,22), c(18,28))
colnames(matrixc) <- c( "Nie upadłe", "Upadłe")
rownames(matrixc) <- c( "Nie upadłe", "Upadłe")
matrixc
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
altmanmodel <- test_set[,c(3,6,7,8,9,65)]
altmanmodel <- testing_set[,c(3,6,7,8,9,65)]
altmanmodel <- as.data.frame(lapply(altmanmodel, as.numeric))
colnames(altmanmodel) <- c("X1", "X2", "X3", "X4", "X5", "X6")
altmanmodel<- altmanmodel%>%
mutate(Z_score = 1.2*X1 + 1.4*X2 + 3.3*X3 + 0.6*X4+0.99*X5)
altmanmodel <- altmanmodel%>%
mutate(Wynik = ifelse(Z_score <1.8, "U", ifelse(Z_score<3.0, "SS", "NU")))
altmanmodel <- altmanmodel%>%
mutate(Dokladnosc = ifelse(Wynik=="U" & X6 == 1,"UU", ifelse(Wynik=="NU" & X6 == 0, "NUNU", ifelse(Wynik=="NU" & X6 == 1, "UNU", ifelse(Wynik=="U" & X6 == 0, "NUU", ifelse(Wynik=="SS" & X6 == 0, "NUSS", "USS"))))))
counts2 <- data.frame(Rzeczywistość = c("Alive", "Alive", "Alive", "Bancrupted", "Bancrupted", "Bancrupted"),Prognoza= c("Alive", "Grey area", "Bancrupted", "Alive", "Grey area", "Bancrupted"), Ilość = as.vector(table(altmanmodel$Dokladnosc)))
counts2
write_xlsx(counts2, "lda1.xlsx")
altmanmodel
testing_set
altmanmodel <- testing_set[,c(3,6,7,8,9,65)]
colnames(altmanmodel) <- c("X1", "X2", "X3", "X4", "X5", "X6")
altmanmodel<- altmanmodel%>%
mutate(Z_score = 1.2*X1 + 1.4*X2 + 3.3*X3 + 0.6*X4+0.99*X5)
altmanmodel <- altmanmodel%>%
mutate(Wynik = ifelse(Z_score <1.8, "U", ifelse(Z_score<3.0, "SS", "NU")))
altmanmodel <- altmanmodel%>%
mutate(Dokladnosc = ifelse(Wynik=="U" & X6 == 1,"UU", ifelse(Wynik=="NU" & X6 == 0, "NUNU", ifelse(Wynik=="NU" & X6 == 1, "UNU", ifelse(Wynik=="U" & X6 == 0, "NUU", ifelse(Wynik=="SS" & X6 == 0, "NUSS", "USS"))))))
altmanmodel
counts2 <- data.frame(Rzeczywistość = c("Alive", "Alive", "Alive", "Bancrupted", "Bancrupted", "Bancrupted"),Prognoza= c("Alive", "Grey area", "Bancrupted", "Alive", "Grey area", "Bancrupted"), Ilość = as.vector(table(altmanmodel$Dokladnosc)))
counts2
write_xlsx(counts2, "lda1.xlsx")
altmanmodel <- traning_set[,c(3,6,7,8,9,65)]
altmanmodel <- training_set[,c(3,6,7,8,9,65)]
colnames(altmanmodel) <- c("X1", "X2", "X3", "X4", "X5", "X6")
altmanmodel<- altmanmodel%>%
mutate(Z_score = 1.2*X1 + 1.4*X2 + 3.3*X3 + 0.6*X4+0.99*X5)
altmanmodel <- altmanmodel%>%
mutate(Wynik = ifelse(Z_score <1.8, "U", ifelse(Z_score<3.0, "SS", "NU")))
altmanmodel <- altmanmodel%>%
mutate(Dokladnosc = ifelse(Wynik=="U" & X6 == 1,"UU", ifelse(Wynik=="NU" & X6 == 0, "NUNU", ifelse(Wynik=="NU" & X6 == 1, "UNU", ifelse(Wynik=="U" & X6 == 0, "NUU", ifelse(Wynik=="SS" & X6 == 0, "NUSS", "USS"))))))
counts2 <- data.frame(Rzeczywistość = c("Alive", "Alive", "Alive", "Bancrupted", "Bancrupted", "Bancrupted"),Prognoza= c("Alive", "Grey area", "Bancrupted", "Alive", "Grey area", "Bancrupted"), Ilość = as.vector(table(altmanmodel$Dokladnosc)))
counts2
write_xlsx(counts2, "lda1.xlsx")
model_lda <- lda(V65 ~ ., data = training_set[, c(3,6,7,8,9,65)])
predictions <- predict(model_lda, newdata = testowe[,c(3,6,7,8,9)])
model_lda <- lda(V65 ~ ., data = training_set[, c(3,6,7,8,9,65)])
predictions <- predict(model_lda, newdata = testing_set[,c(3,6,7,8,9)])
model_lda <- lda(V65 ~ ., data = training_set[,final_variables])
model_lda <- lda(V65 ~ ., data = training_set[,c(final_variables, "V65")])
predictions <- predict(model_lda, newdata = testing_set[,final_variables])
model_lda <- lda(V65 ~ ., data = training_set[,c(final_variables, "V65")])
predictions <- predict(model_lda, newdata = testing_set[,final_variables])
# upadłe  - 1 # żywe - 0
confusion_matrix <- table(testing_set$V65, predictions$class)
matrixc <- data.frame(c(32,22), c(18,28))
colnames(matrixc) <- c( "Alive", "Bancrupted")
rownames(matrixc) <- c( "Alive", "Bancrupted")
matrixc
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
accuracy
# upadłe  - 1 # żywe - 0
confusion_matrix <- table(testing_set$V65, predictions$class)
confusion_matrix
Rates <- read_excel("Results_sheets.xlsx",
sheet = "Rates")
Altman <- read_excel("Results_sheets.xlsx",
sheet = "LDA")
Matrixes <- read_excel("Results_sheets.xlsx",
sheet = "Matrix")
Matrixes[, Matrixes$method == "altman"]
Matrixes
Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive"))
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Actual == "1", "Bancrupted", "Alive"))
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Predicted == "1", "Bancrupted", "Alive"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
y5 <- read.csv("5year.arff", header = TRUE, comment.char = "@")
colnames(y5) <- paste0("V", 1:65)
Rates <- read_excel("Results_sheets.xlsx",
sheet = "Rates")
Altman <- read_excel("Results_sheets.xlsx",
sheet = "LDA")
Matrixes <- read_excel("Results_sheets.xlsx",
sheet = "Matrix")
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Predicted == "1", "Bancrupted", "Alive"))
Matrixes%>%
filter(method = "altman")
Matrixes%>%
filter(method == "altman")
Matrixes
LDA
Altman
Rates %>%
filter(method == "altman")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
Matrixes %>%
filter(method = "tutson")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
y5 <- read.csv("5year.arff", header = TRUE, comment.char = "@")
colnames(y5) <- paste0("V", 1:65)
Rates <- read_excel("Results_sheets.xlsx",
sheet = "Rates")
Altman <- read_excel("Results_sheets.xlsx",
sheet = "LDA")
Matrixes <- read_excel("Results_sheets.xlsx",
sheet = "Matrix")
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Predicted == "1", "Bancrupted", "Alive"))
Altman
Rates %>%
filter(method == "altman")
Matrixes %>%
filter(method = "tutson")
Matrixes %>%
filter(method == "tutson")
Rates %>%
filter(method == "tutson")
Matrixes %>%
filter(method == "qda")
Rates %>%
filter(method == "qda")
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Predicted == "1", "Bancrupted", "Alive"))
colnames(Rates) <- c("Accuracy", "False Negative Rate", "Method")
Altman
Rates %>%
filter(method == "altman")
Matrixes %>%
filter(Method == "tutson")
colnames(Rates) <- c("Accuracy", "False Negative Rate","Freq", "Method")
Rates
Rates %>%
filter(Method == "altman")
colnames(Rates) <- c("Accuracy", "False Negative Rate", "Method")
Rates %>%
filter(Method == "altman")
Matrixes %>%
filter(Method == "tutson")
Results
Rates
Matrixes %>%
filter(method == "naive bayes")
Rates %>%
filter(Method == "naive bayes")
Matrixes %>%
filter(method == "tutson")
Matrixes %>%
filter(method == "naive bayes")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
y5 <- read.csv("5year.arff", header = TRUE, comment.char = "@")
colnames(y5) <- paste0("V", 1:65)
Rates <- read_excel("Results_sheets.xlsx",
sheet = "Rates")
Altman <- read_excel("Results_sheets.xlsx",
sheet = "LDA")
Matrixes <- read_excel("Results_sheets.xlsx",
sheet = "Matrix")
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Predicted == "1", "Bancrupted", "Alive"))
colnames(Rates) <- c("Accuracy", "False Negative Rate", "Method")
Rates
Altman
Rates %>%
filter(Method == "altman")
Matrixes %>%
filter(method == "tutson")
Rates %>%
filter(Method == "tutson")
Matrixes %>%
filter(method == "qda")
Rates %>%
filter(Method == "qda")
Matrixes %>%
filter(method == "naive bayes")
Matrixes %>%
filter(method == "logistic regression")
Rates %>%
filter(Method == "logistic regression")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
y5 <- read.csv("5year.arff", header = TRUE, comment.char = "@")
colnames(y5) <- paste0("V", 1:65)
Rates <- read_excel("Results_sheets.xlsx",
sheet = "Rates")
Altman <- read_excel("Results_sheets.xlsx",
sheet = "LDA")
Matrixes <- read_excel("Results_sheets.xlsx",
sheet = "Matrix")
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Predicted == "1", "Bancrupted", "Alive"))
colnames(Rates) <- c("Accuracy", "False Negative Rate", "Method")
Rates
Altman
Rates %>%
filter(Method == "altman")
Matrixes %>%
filter(method == "tutson")
Rates %>%
filter(Method == "tutson")
Matrixes %>%
filter(method == "qda")
Rates %>%
filter(Method == "qda")
Matrixes %>%
filter(method == "naive bayes")
Rates %>%
filter(Method == "naive bayes")
Matrixes %>%
filter(method == "logistic regression")
Rates %>%
filter(Method == "logistic regression")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(foreign)
library(caret)
library(dplyr)
library(MASS)
library(naivebayes)
library(randomForest)
#setwd("C:/Users/qbawa/OneDrive/Pulpit/ryzyko-projekt")
setwd("C:/Users/olgas/OneDrive/Documents/GitHub/Quantative-risk-models-summit/Altman-model_files")
test <- predict(lr_model, testing_set, type='response')
pred <- ifelse(test > 0.8,1,0)
tab <- table(testing_set$V65, pred)
dimnames(tab) <- list(
"Actual" = levels(testing_set$V65),
"Predicted" = levels(pred)
)
tab
cat("Accuracy: ", 100*(tab[1,1] + tab[2,2])/sum(tab), "%\n")
cat("False negative rate: ", 100*tab[2,1]/(tab[2,1]+tab[2,2]), "%\n")
test <- predict(lr_model, testing_set, type='response')
pred <- ifelse(test > 0.7,1,0)
tab <- table(testing_set$V65, pred)
dimnames(tab) <- list(
"Actual" = levels(testing_set$V65),
"Predicted" = levels(pred)
)
tab
cat("Accuracy: ", 100*(tab[1,1] + tab[2,2])/sum(tab), "%\n")
cat("False negative rate: ", 100*tab[2,1]/(tab[2,1]+tab[2,2]), "%\n")
test <- predict(lr_model, testing_set, type='response')
pred <- ifelse(test > 0.8,1,0)
tab <- table(testing_set$V65, pred)
dimnames(tab) <- list(
"Actual" = levels(testing_set$V65),
"Predicted" = levels(pred)
)
tab
cat("Accuracy: ", 100*(tab[1,1] + tab[2,2])/sum(tab), "%\n")
cat("False negative rate: ", 100*tab[2,1]/(tab[2,1]+tab[2,2]), "%\n")
test <- predict(lr_model, testing_set, type='response')
pred <- ifelse(test > 0.2,1,0)
tab <- table(testing_set$V65, pred)
dimnames(tab) <- list(
"Actual" = levels(testing_set$V65),
"Predicted" = levels(pred)
)
tab
cat("Accuracy: ", 100*(tab[1,1] + tab[2,2])/sum(tab), "%\n")
cat("False negative rate: ", 100*tab[2,1]/(tab[2,1]+tab[2,2]), "%\n")
test <- predict(lr_model, testing_set, type='response')
pred <- ifelse(test > 0.1,1,0)
tab <- table(testing_set$V65, pred)
dimnames(tab) <- list(
"Actual" = levels(testing_set$V65),
"Predicted" = levels(pred)
)
tab
cat("Accuracy: ", 100*(tab[1,1] + tab[2,2])/sum(tab), "%\n")
cat("False negative rate: ", 100*tab[2,1]/(tab[2,1]+tab[2,2]), "%\n")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
y5 <- read.csv("5year.arff", header = TRUE, comment.char = "@")
colnames(y5) <- paste0("V", 1:65)
Rates <- read_excel("Results_sheets.xlsx",
sheet = "Rates")
Altman <- read_excel("Results_sheets.xlsx",
sheet = "LDA")
Matrixes <- read_excel("Results_sheets.xlsx",
sheet = "Matrix")
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Predicted == "1", "Bancrupted", "Alive"))
colnames(Rates) <- c("Accuracy", "False Negative Rate", "Method")
Rates
Altman
Rates %>%
filter(Method == "altman")
Matrixes %>%
filter(method == "tutson")
Rates %>%
filter(Method == "tutson")
Matrixes %>%
filter(method == "qda")
Rates %>%
filter(Method == "qda")
Matrixes %>%
filter(method == "naive bayes")
Rates %>%
filter(Method == "naive bayes")
Matrixes %>%
filter(method == "logistic regression")
Rates %>%
filter(Method == "logistic regression")
Rates %>%
filter(Method == "lr08")
Rates %>%
filter(Method == "lr08")
Rates %>%
filter(Method == "lr01")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
Matrixes
Matrixes %>%
filter(method == "large set LDA")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
y5 <- read.csv("5year.arff", header = TRUE, comment.char = "@")
colnames(y5) <- paste0("V", 1:65)
Rates <- read_excel("Results_sheets.xlsx",
sheet = "Rates")
Altman <- read_excel("Results_sheets.xlsx",
sheet = "LDA")
Matrixes <- read_excel("Results_sheets.xlsx",
sheet = "Matrix")
Matrixes <-Matrixes %>%
mutate(Actual = ifelse(Actual == "1", "Bancrupted", "Alive")) %>%
mutate(Predicted = ifelse(Predicted == "1", "Bancrupted", "Alive"))
colnames(Rates) <- c("Accuracy", "False Negative Rate", "Method")
Altman
Rates %>%
filter(Method == "altman")
Matrixes %>%
filter(method == "tutson")
Rates %>%
filter(Method == "tutson")
Matrixes %>%
filter(method == "maczynski")
Rates %>%
filter(Method == "maczynski")
Matrixes %>%
filter(method == "poznanski")
Rates %>%
filter(Method == "poznanski")
Matrixes %>%
filter(method == "qda")
Rates %>%
filter(Method == "qda")
Matrixes %>%
filter(method == "naive bayes")
Rates %>%
filter(Method == "naive bayes")
Matrixes %>%
filter(method == "logistic regression")
Rates %>%
filter(Method == "logistic regression")
Rates %>%
filter(Method == "lr08")
Rates %>%
filter(Method == "lr01")
Matrixes %>%
filter(method == "xgb")
Rates %>%
filter(Method == "xgb")
Matrixes %>%
filter(method == "random forest")
Rates %>%
filter(Method == "random forest")
Rates$Accuracy <- as.numeric(Rates$Accuracy)
ggplot(Rates[c(1,2,3,4,7,8,9,10,11,12,13),], aes(x = reorder(Method, Accuracy), y = Accuracy)) +
geom_bar(stat = "identity", fill = "orange") +
geom_text(aes(label = round(Accuracy, 1)), vjust = -0.5, size = 3.5) +
labs(title = NULL,
x = NULL,
y = "Accuracy (%)") +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(angle = 25, hjust = 1))
Rates$`False Negative Rate` <- as.numeric(Rates$`False Negative Rate`)
ggplot(Rates[c(1,2,3,4,7,8,9,10,11,12,13),], aes(x = reorder(Method, `False Negative Rate`), y = `False Negative Rate`)) +
geom_bar(stat = "identity", fill = "orange") +
geom_text(aes(label = round(`False Negative Rate`, 1)), vjust = -0.5, size = 3.5) +
labs(title = NULL,
x = NULL,
y = "FNR (%)") +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(angle = 25, hjust = 1))
Matrixes %>%
filter(method == "large set LDA")
Rates %>%
filter(Method == "large set LDA")
Rates %>%
filter(Method == "large set LDA" || Method == "lda"  )
Rates %>%
filter(Method == "large set LDA" || Method == "tutson"  )
Rates %>%
filter(Method %in% c("large set LDA", "tutson"))
Matrixes
Matrixes %>%
filter(method == "large set random forest")
Rates %>%
filter(Method %in% c("large set random forest", "random forest"))
